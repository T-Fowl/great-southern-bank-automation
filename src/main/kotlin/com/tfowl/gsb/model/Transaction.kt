package com.tfowl.gsb.model

import kotlinx.datetime.toJavaLocalDate
import org.jetbrains.kotlinx.dataframe.DataRow
import org.jetbrains.kotlinx.dataframe.annotations.DataSchema
import java.time.LocalDate

data class Transaction(
    val date: LocalDate,
    val description: String,
    val balance: Money,
    val debit: Money? = null,
    val credit: Money? = null,
) {
    val isCredit: Boolean = credit != null && debit == null
    val isDebit: Boolean = credit == null && debit != null
}

fun DataRow<TransactionSchema>.toTransaction(): Transaction = Transaction(
    date = Date.toJavaLocalDate(),
    description = Description,
    balance = Balance,
    credit = Credit,
    debit = Debit
)

// @formatter:off

/*
    TODO: This schema should really be generated by the dataframe gradle plugin
 */
@DataSchema
interface TransactionSchema {
    val Balance: com.tfowl.gsb.model.Money
    val Credit: com.tfowl.gsb.model.Money?
    val Date: kotlinx.datetime.LocalDate // d LLL yyyy
    val Debit: com.tfowl.gsb.model.Money?
    val Description: kotlin.String
}

val org.jetbrains.kotlinx.dataframe.ColumnsContainer<TransactionSchema>.Balance: org.jetbrains.kotlinx.dataframe.DataColumn<com.tfowl.gsb.model.Money> @JvmName("Transaction_Balance") get() = this["Balance"] as org.jetbrains.kotlinx.dataframe.DataColumn<com.tfowl.gsb.model.Money>
val org.jetbrains.kotlinx.dataframe.DataRow<TransactionSchema>.Balance: com.tfowl.gsb.model.Money @JvmName("Transaction_Balance") get() = this["Balance"] as com.tfowl.gsb.model.Money
val org.jetbrains.kotlinx.dataframe.ColumnsContainer<TransactionSchema>.Credit: org.jetbrains.kotlinx.dataframe.DataColumn<com.tfowl.gsb.model.Money?> @JvmName("Transaction_Credit") get() = this["Credit"] as org.jetbrains.kotlinx.dataframe.DataColumn<com.tfowl.gsb.model.Money?>
val org.jetbrains.kotlinx.dataframe.DataRow<TransactionSchema>.Credit: com.tfowl.gsb.model.Money? @JvmName("Transaction_Credit") get() = this["Credit"] as com.tfowl.gsb.model.Money?
val org.jetbrains.kotlinx.dataframe.ColumnsContainer<TransactionSchema>.Date: org.jetbrains.kotlinx.dataframe.DataColumn<kotlinx.datetime.LocalDate> @JvmName("Transaction_Date") get() = this["Date"] as org.jetbrains.kotlinx.dataframe.DataColumn<kotlinx.datetime.LocalDate>
val org.jetbrains.kotlinx.dataframe.DataRow<TransactionSchema>.Date: kotlinx.datetime.LocalDate @JvmName("Transaction_Date") get() = this["Date"] as kotlinx.datetime.LocalDate
val org.jetbrains.kotlinx.dataframe.ColumnsContainer<TransactionSchema>.Debit: org.jetbrains.kotlinx.dataframe.DataColumn<com.tfowl.gsb.model.Money?> @JvmName("Transaction_Debit") get() = this["Debit"] as org.jetbrains.kotlinx.dataframe.DataColumn<com.tfowl.gsb.model.Money?>
val org.jetbrains.kotlinx.dataframe.DataRow<TransactionSchema>.Debit: com.tfowl.gsb.model.Money? @JvmName("Transaction_Debit") get() = this["Debit"] as com.tfowl.gsb.model.Money?
val org.jetbrains.kotlinx.dataframe.ColumnsContainer<TransactionSchema>.Description: org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> @JvmName("Transaction_Description") get() = this["Description"] as org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String>
val org.jetbrains.kotlinx.dataframe.DataRow<TransactionSchema>.Description: kotlin.String @JvmName("Transaction_Description") get() = this["Description"] as kotlin.String

// @formatter:off
